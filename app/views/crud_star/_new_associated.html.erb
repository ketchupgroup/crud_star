<div id="add_associated_<%= association.klass.name.underscore %>"<%= raw 'style="display: none;"' if flash[:object].nil? or flash[:object].errors.empty? %>">
	
	<h4>Add <%= association.klass.name.titleize %></h4>
	
	<% if controller.permissions[session[:crud_star][:role]].include? 'new_associated' %>
		<ul id="associated_tabs">
	        <li><a onclick="$('associated_existing').show(); $('associated_create').hide();">Existing</a></li>
	        <li><a onclick="$('associated_existing').hide(); $('associated_create').show();">New</a></li>
	    </ul>
	<% end %>
	
	<div id="associated_form">
		<div id="associated_existing">
			<%= form_tag(self.send('add_associated_' + path_for_resource(controller.model), @item_id), :remote => true, :method => :post) %>
		       <fieldset>
		        
		            <%= hidden_field_tag('association_name', association.name.to_s) %>
		            <%= hidden_field_tag('id', @item_id.to_s) %>
					
					<%
					   options = ['Please Select']
                       association.klass.all.each {|p|
						 new_option = association.klass.find p.id
						
						 options << [get_value(p, association.klass.crud_star_options[:default_attribute]), p.id] unless @item.send(attribute).include?(new_option)
					   }
                    %>
					
					<%= select_tag(association.klass.name.underscore + '[id]', options_for_select(options)) %>
		        	
		            <div>
		                <input type="submit" class="button" value="Add <%= association.klass.name.titleize %>" />
						or <a href="#" hide="add_associated_<%= association.klass.name.underscore %>" class="cancel">Cancel</a>
		            </div>
		       </fieldset>
		    </form>
		</div>
		
		<% if controller.permissions[session[:crud_star][:role]].include? 'new_associated' %>
		
			<div id="associated_create" style="display: none;">
				
				<%
			      unless flash[:object].nil?
			
			        @new = flash[:object]
			    %>
			       <%= error_messages_for('new', :class => 'alert-wrong', :header_message => nil) %>
			    <% end %>
				
				<%= form_tag(self.send('add_associated_' + path_for_resource(controller.model)), :remote => true, :method => :post) %>
				   <fieldset>
				   	
			            <%= hidden_field_tag('association_name', association.name.to_s) %>
			            <%= hidden_field_tag('id', @item_id.to_s) %>
					
						<%
							# Create a new object to enable column and class interrogation when displaying the fields.				    
							@new_item = association.klass.new
			                
			                # Populate the new object with previously-submitted parameters, if applciable (e.g. errors).
			                unless params[association.klass.name.underscore.to_sym].nil?
			                    params[association.klass.name.underscore.to_sym].each do |name, value|
			                        @new_item[name] = value
			                    end
						    end
			                
			                # Show each field.
						    association.klass.new_associated_attributes[session[:crud_star][:role]].each do |attribute|
						%>
						    <p<%= CrudStar::Utility.required_field?(association.klass, attribute) ? ' class="required"' : nil %>>
							    <%= display_field(@new_item, attribute) %>
			                    <%=
									partial = CrudStar::Utility.get_field_help(association.klass, attribute)
									render(:partial => partial) unless partial.nil?
								%>
							</p>
						<% end %>
						
						<div>
							<input type="submit" class="button" value="Add <%= association.klass.name.titleize %>" />
							or <a href="#" hide="add_associated_<%= association.klass.name.underscore %>" class="cancel">Cancel</a>
						</div>
						
				   </fieldset>
				   
				</form>
			</div>
		<% end %>
	</div>
</div>

<div id="add_associated_<%= association.klass.name.underscore %>_button"<%= 'style="display: none;"' unless flash[:object].nil? %>>
	<button class="button add_associated">Add <%= association.klass.name.titleize %></button>
</div>
